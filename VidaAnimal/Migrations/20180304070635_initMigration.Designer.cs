// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using VidaAnimal.Services;

namespace VidaAnimal.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20180304070635_initMigration")]
    partial class initMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VidaAnimal.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<double>("Cost");

                    b.Property<double>("Discount");

                    b.Property<double>("IVA");

                    b.Property<double>("Marked");

                    b.Property<DateTime>("PriceLastUdate");

                    b.Property<string>("ProductName");

                    b.Property<int>("StockControl");

                    b.Property<int>("StockMinim");

                    b.Property<int>("SupplierId");

                    b.Property<int>("Units");

                    b.HasKey("ProductId");

                    b.ToTable("TblProduct");
                });

            modelBuilder.Entity("VidaAnimal.Models.Purchasing", b =>
                {
                    b.Property<int>("PurchasingId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Obs");

                    b.Property<double>("Price");

                    b.Property<int>("ProductId");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<int>("Quantity");

                    b.Property<double>("Total");

                    b.HasKey("PurchasingId");

                    b.ToTable("TblPurchasing");
                });

            modelBuilder.Entity("VidaAnimal.Models.Sales", b =>
                {
                    b.Property<int>("SalesId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Cost");

                    b.Property<string>("Obs");

                    b.Property<int>("PayWayId");

                    b.Property<int>("Price");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<DateTime>("SellingDate");

                    b.Property<int>("Total");

                    b.HasKey("SalesId");

                    b.ToTable("TblSales");
                });

            modelBuilder.Entity("VidaAnimal.Models.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CurrentStock");

                    b.Property<int>("ProductId");

                    b.Property<int>("StockControl");

                    b.Property<int>("StockMinim");

                    b.Property<string>("Unidades");

                    b.HasKey("StockId");

                    b.ToTable("TblStock");
                });

            modelBuilder.Entity("VidaAnimal.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("SupplierName");

                    b.Property<string>("Telephone");

                    b.HasKey("SupplierId");

                    b.ToTable("TblSupplier");
                });
#pragma warning restore 612, 618
        }
    }
}
